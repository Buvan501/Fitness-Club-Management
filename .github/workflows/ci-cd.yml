name: CI/CD

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  IMAGE_NAME: fitclub-pro
  REGISTRY: docker.io
  K8S_NAMESPACE: default

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest
            type=sha,format=long
            type=raw,value=${{ github.sha }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Export image ref
        id: img
        run: |
          echo "image=${{ env.REGISTRY }}/${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}" >> $GITHUB_OUTPUT

      - name: Upload k8s manifests
        uses: actions/upload-artifact@v4
        with:
          name: k8s-manifests
          path: k8s/

  # Kubernetes deployment disabled - uncomment when you have a K8s cluster configured
  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: build-and-push
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4
  # 
  #     - name: Download k8s manifests
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: k8s-manifests
  #         path: k8s
  # 
  #     - name: Set up kubectl
  #       uses: azure/setup-kubectl@v4
  #       with:
  #         version: 'v1.30.0'
  # 
  #     - name: Configure kubeconfig
  #       run: |
  #         mkdir -p $HOME/.kube
  #         echo "${KUBE_CONFIG_DATA}" | base64 -d > $HOME/.kube/config
  #       env:
  #         KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
  # 
  #     - name: Apply manifests
  #       run: |
  #         kubectl apply -n ${{ env.K8S_NAMESPACE }} -k k8s/
  # 
  #     - name: Set image to new SHA
  #       run: |
  #         IMAGE="${{ env.REGISTRY }}/${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }}"
  #         kubectl set image deployment/fitclub-pro web=$IMAGE -n ${{ env.K8S_NAMESPACE }}
  #         kubectl rollout status deployment/fitclub-pro -n ${{ env.K8S_NAMESPACE }} --timeout=120s
